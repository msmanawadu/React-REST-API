{"version":3,"sources":["index.js"],"names":["GitHubUser","useState","data","setData","useEffect","fetch","then","res","json","catch","console","error","className","align","border","results","name","title","first","last","gender","location","street","number","city","state","country","dob","date","age","phone","cell","src","picture","large","alt","role","aria-label","App","ReactDOM","render","document","getElementById"],"mappings":"+NAMA,SAASA,IAAc,IAAD,EACIC,mBAAS,MADb,mBACbC,EADa,KACPC,EADO,KASpB,OAPAC,qBAAU,WACRC,MAAM,8BACHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UACdF,KAAKH,GACLM,MAAMC,QAAQC,SAClB,IAEAT,EAEC,yBAAKU,UAAY,OACf,yBAAKA,UAAY,aACf,wBAAIC,MAAQ,UAAZ,2BAEF,yBAAKD,UAAY,iBACjB,2BAAOA,UAAY,QAAQE,OAAQ,KACjC,4BACE,4BACE,sCACA,0BAAMF,UAAY,WAAWV,EAAKa,QAAQ,GAAGC,KAAKC,QAEpD,4BACE,qCADF,IACgB,0BAAML,UAAY,WAC7BV,EAAKa,QAAQ,GAAGC,KAAKE,MADV,IACkB,GADlB,IACuBhB,EAAKa,QAAQ,GAAGC,KAAKG,OAG5D,4BACE,uCADF,IACkB,0BAAMP,UAAY,WAC/BV,EAAKa,QAAQ,GAAGK,UAIxB,4BACC,4BACE,wCADF,IACmB,0BAAMR,UAAY,WAChCV,EAAKa,QAAQ,GAAGM,SAASC,OAAOC,OADlB,KAC4B,GAC3CrB,EAAKa,QAAQ,GAAGM,SAASC,OAAON,KAFjB,KAEyB,GACxCd,EAAKa,QAAQ,GAAGM,SAASG,KAHV,KAGkB,GACjCtB,EAAKa,QAAQ,GAAGM,SAASI,MAJV,KAImB,GAClCvB,EAAKa,QAAQ,GAAGM,SAASK,WAI9B,4BACG,4BACE,uDACA,0BAAMd,UAAY,WACfV,EAAKa,QAAQ,GAAGY,IAAIC,OAGzB,4BACI,oCACA,0BAAMhB,UAAY,WACfV,EAAKa,QAAQ,GAAGY,IAAIE,OAI7B,4BACE,4BACE,sCACA,0BAAMjB,UAAY,WACfV,EAAKa,QAAQ,GAAGe,QAErB,4BACE,uCACA,0BAAMlB,UAAY,WACfV,EAAKa,QAAQ,GAAGgB,QAIvB,4BACE,wBAAIlB,MAAQ,UACV,yBAAKmB,IAAO9B,EAAKa,QAAQ,GAAGkB,QAAQC,MAAOtB,UAAY,QAAQuB,IAAM,eAK7E,gCACE,yBAAKvB,UAAY,UAAjB,QACM,IACJ,0BAAMwB,KAAK,MAAMC,aAAW,QAA5B,gBAEQ,IAJV,sCAWC,KAGT,SAASC,IACP,OACA,kBAAEtC,EAAF,MAIFuC,IAASC,OACL,kBAACF,EAAD,MACFG,SAASC,eAAe,W","file":"static/js/main.06092e6a.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n//import App from './App';\n//import * as serviceWorker from './serviceWorker';\n\nfunction GitHubUser() {\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    fetch('https://api.randomuser.me/')\n      .then(res => res.json())\n        .then(setData)\n        .catch(console.error);\n  }, []);\n\n  if(data) {\n    return (\n      <div className = \"App\">\n        <div className = \"container\">\n          <h1 align = \"center\"> Personal Information </h1>\n        </div> \n        <div className = \"dataContainer\">\n        <table className = \"table\" border= \"1\">\n          <tr>\n            <td>\n              <b>Title: </b> \n              <span className = \"dataSet\">{data.results[0].name.title}</span>\n            </td>\n            <td>\n              <b>Name: </b> <span className = \"dataSet\">\n                {data.results[0].name.first} {\"\"} {data.results[0].name.last}\n              </span>\n            </td>\n            <td>\n              <b>Gender: </b> <span className = \"dataSet\">\n                {data.results[0].gender}</span>\n            </td>\n         </tr>\n\n         <tr>\n          <td>\n            <b>Address: </b> <span className = \"dataSet\">\n              {data.results[0].location.street.number}, {\"\"}\n             {data.results[0].location.street.name}, {\"\"}\n             {data.results[0].location.city}, {\"\"}\n             {data.results[0].location.state}, {\"\"}\n             {data.results[0].location.country}</span>\n          </td>\n         </tr>\n\n         <tr>\n            <td>\n              <b>Date and time of birth: </b> \n              <span className = \"dataSet\">\n                {data.results[0].dob.date}\n              </span>\n            </td>\n            <td>\n                <b>Age: </b>\n                <span className = \"dataSet\">\n                  {data.results[0].dob.age}</span>\n            </td>\n         </tr>\n\n          <tr>\n            <td>\n              <b>Phone: </b>\n              <span className = \"dataSet\">\n                {data.results[0].phone}</span>\n            </td>\n            <td>\n              <b>Mobile: </b>\n              <span className = \"dataSet\">\n                {data.results[0].cell}</span>\n            </td>\n          </tr>\n\n          <tr>\n            <td align = \"center\">\n              <img src = {data.results[0].picture.large} className = \"image\" alt = \"person\"/>\n            </td>\n          </tr>\n      </table>\n      </div>\n      <footer>\n        <div className = \"footer\">\n        Built{\" \"}\n          <span role='img' aria-label='love'>\n            üíö\n          </span>{\" \"}\n          with by MS Manawadu üêº    \n        </div>\n      </footer>\n    </div>\n    );\n  } \n  return null; \n}\n\nfunction App() {\n  return(\n  < GitHubUser/>\n  );\n}\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}